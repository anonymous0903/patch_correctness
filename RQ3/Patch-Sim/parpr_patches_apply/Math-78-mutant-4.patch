--- Math78b/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	2017-03-21 00:01:55.000000000 +0800
+++ Math78_Math-78-mutant-4.patchb/src/main/java/org/apache/commons/math/analysis/solvers/BrentSolver.java	2017-03-21 00:01:55.000000000 +0800
@@ -274,8 +274,8 @@
                 } else {
                     p = -p;
                 }
-                if (2.0 * p >= 1.5 * dx * p1 - Math.abs(tolerance * p1) ||
-                        p >= Math.abs(0.5 * oldDelta * p1)) {
+        if (2.0D * p >= 1.5D * dx * p1 - Math.abs(tolerance * p1) || 
+        p >= Math.abs(0.5D * oldDelta / p1)) {
                     // Inverse quadratic interpolation gives a value
                     // in the wrong direction, or progress is slow.
                     // Fall back to bisection.
