diff -u -b /home/junyang/patch_correctness/gh/patch_correctness/developer_patches/Math/19/mutant-0/buggy-CMAESOptimizer.java /home/junyang/patch_correctness/gh/patch_correctness/developer_patches/Math/19/mutant-0/patched-CMAESOptimizer.java
--- /home/junyang/patch_correctness/gh/patch_correctness/developer_patches/Math/19/mutant-0/buggy-CMAESOptimizer.java	2021-08-22 00:18:38.666190185 -0700
+++ /home/junyang/patch_correctness/gh/patch_correctness/developer_patches/Math/19/mutant-0/patched-CMAESOptimizer.java	2021-08-22 00:18:38.666190185 -0700
@@ -537,6 +537,19 @@
                 boundaries[1] = uB;
 
                 // Abort early if the normalization will overflow (cf. "encode" method).
+                for (int i = 0; i < lB.length; i++) {
+                    if (Double.isInfinite(boundaries[1][i] - boundaries[0][i])) {
+                        final double max = Double.MAX_VALUE + boundaries[0][i];
+                        final NumberIsTooLargeException e
+                            = new NumberIsTooLargeException(boundaries[1][i],
+                                                            max,
+                                                            true);
+                        e.getContext().addMessage(LocalizedFormats.OVERFLOW);
+                        e.getContext().addMessage(LocalizedFormats.INDEX, i);
+
+                        throw e;
+                    }
+                }
             }
         } else {
             // Convert API to internal handling of boundaries.
