diff -u -b /home/junyang/patch_correctness/gh/patch_correctness/developer_patches/Lang/64/mutant-0/buggy-ValuedEnum.java /home/junyang/patch_correctness/gh/patch_correctness/developer_patches/Lang/64/mutant-0/patched-ValuedEnum.java
--- /home/junyang/patch_correctness/gh/patch_correctness/developer_patches/Lang/64/mutant-0/buggy-ValuedEnum.java	2021-08-22 00:18:38.658190185 -0700
+++ /home/junyang/patch_correctness/gh/patch_correctness/developer_patches/Lang/64/mutant-0/patched-ValuedEnum.java	2021-08-22 00:18:38.658190185 -0700
@@ -180,6 +180,16 @@
      * @throws NullPointerException if other is <code>null</code>
      */
     public int compareTo(Object other) {
+        if (other == this) {
+            return 0;
+        }
+        if (other.getClass() != this.getClass()) {
+            if (other.getClass().getName().equals(this.getClass().getName())) {
+                return iValue - getValueInOtherClassLoader(other);
+            }
+            throw new ClassCastException(
+                    "Different enum class '" + ClassUtils.getShortClassName(other.getClass()) + "'");
+        }
         return iValue - ((ValuedEnum) other).iValue;
     }
 
@@ -189,9 +199,20 @@
      * @param other  the object to determine the value for
      * @return the value
      */
+    private int getValueInOtherClassLoader(Object other) {
+        try {
+            Method mth = other.getClass().getMethod("getValue", null);
+            Integer value = (Integer) mth.invoke(other, null);
+            return value.intValue();
+        } catch (NoSuchMethodException e) {
             // ignore - should never happen
+        } catch (IllegalAccessException e) {
             // ignore - should never happen
+        } catch (InvocationTargetException e) {
             // ignore - should never happen
+        }
+        throw new IllegalStateException("This should not happen");
+    }
 
     /**
      * <p>Human readable description of this <code>Enum</code> item.</p>
