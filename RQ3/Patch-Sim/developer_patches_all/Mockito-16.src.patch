diff -u -b /home/junyang/patch_correctness/gh/patch_correctness/developer_patches/Mockito/16/mutant-0/buggy-Mockito.java /home/junyang/patch_correctness/gh/patch_correctness/developer_patches/Mockito/16/mutant-0/patched-Mockito.java
--- /home/junyang/patch_correctness/gh/patch_correctness/developer_patches/Mockito/16/mutant-0/buggy-Mockito.java	2021-08-22 00:18:38.702190186 -0700
+++ /home/junyang/patch_correctness/gh/patch_correctness/developer_patches/Mockito/16/mutant-0/patched-Mockito.java	2021-08-22 00:18:38.702190186 -0700
@@ -824,7 +824,7 @@
      * @return mock object
      */
     public static <T> T mock(Class<T> classToMock, MockSettings mockSettings) {
-        return MOCKITO_CORE.mock(classToMock, mockSettings);
+        return MOCKITO_CORE.mock(classToMock, mockSettings, true);
     }
     
     /**
@@ -896,7 +896,7 @@
     public static <T> T spy(T object) {
         return MOCKITO_CORE.mock((Class<T>) object.getClass(), withSettings()
                 .spiedInstance(object)
-                .defaultAnswer(CALLS_REAL_METHODS)); 
+                .defaultAnswer(CALLS_REAL_METHODS), true); 
     }
 
     /**
diff -u -b /home/junyang/patch_correctness/gh/patch_correctness/developer_patches/Mockito/16/mutant-0/buggy-MockitoCore.java /home/junyang/patch_correctness/gh/patch_correctness/developer_patches/Mockito/16/mutant-0/patched-MockitoCore.java
--- /home/junyang/patch_correctness/gh/patch_correctness/developer_patches/Mockito/16/mutant-0/buggy-MockitoCore.java	2021-08-22 00:18:38.702190186 -0700
+++ /home/junyang/patch_correctness/gh/patch_correctness/developer_patches/Mockito/16/mutant-0/patched-MockitoCore.java	2021-08-22 00:18:38.702190186 -0700
@@ -29,10 +29,11 @@
     private final MockUtil mockUtil = new MockUtil();
     private final MockingProgress mockingProgress = new ThreadSafeMockingProgress();
     
-    public <T> T mock(Class<T> classToMock, MockSettings mockSettings, boolean shouldResetOngoingStubbing) { return mock(classToMock, mockSettings); }
-    public <T> T mock(Class<T> classToMock, MockSettings mockSettings) {
+    public <T> T mock(Class<T> classToMock, MockSettings mockSettings, boolean shouldResetOngoingStubbing) {
         mockingProgress.validateState();
+        if (shouldResetOngoingStubbing) {
             mockingProgress.resetOngoingStubbing();
+        }
         return mockUtil.createMock(classToMock, (MockSettingsImpl) mockSettings);
     }
     
