--- jd-result-2.0/JacksonDatabind/35/mutant-7/a-BeanDeserializerBase.java	2021-08-09 04:27:31.993568903 -0700
+++ jd-result-2.0/JacksonDatabind/35/mutant-7/b-BeanDeserializerBase.java	2021-08-09 04:27:33.637568950 -0700
@@ -559,6 +559,7 @@
 /*   0*/  public abstract Object deserializeFromObject(JsonParser paramJsonParser, DeserializationContext paramDeserializationContext) throws IOException;
 /*   0*/  
 /*   0*/  public Object deserializeWithType(JsonParser p, DeserializationContext ctxt, TypeDeserializer typeDeserializer) throws IOException {
+/*   0*/    JsonToken t;
 /* 939*/    if (this._objectIdReader != null) {
 /* 941*/      if (p.canReadObjectId()) {
 /* 942*/        Object id = p.getObjectId();
@@ -567,18 +568,22 @@
 /* 945*/          return _handleTypedObjectId(p, ctxt, ob, id);
 /*   0*/        } 
 /*   0*/      } 
-/* 949*/      JsonToken t = p.getCurrentToken();
+/* 949*/      t = p.getCurrentToken();
 /* 950*/      if (t != null) {
 /* 952*/        if (t.isScalarValue()) {
 /* 953*/            return deserializeFromObjectId(p, ctxt); 
 /*   0*/           }
-/* 956*/        if (t == JsonToken.START_OBJECT) {
-/* 957*/            t = p.nextToken(); 
+/*   0*/      } else {
+/* 966*/        return typeDeserializer.deserializeTypedFromObject(p, ctxt);
 /*   0*/           }
-/* 959*/        if (t == JsonToken.FIELD_NAME && this._objectIdReader.maySerializeAsObject() && this._objectIdReader.isValidReferencePropertyName(p.getCurrentName(), p)) {
-/* 961*/            return deserializeFromObjectId(p, ctxt); 
+/*   0*/    } else {
+/* 966*/      return typeDeserializer.deserializeTypedFromObject(p, ctxt);
 /*   0*/           }
+/*   0*/    while (true) {
+/*   0*/      if (t == JsonToken.FIELD_NAME && this._objectIdReader.maySerializeAsObject() && this._objectIdReader.isValidReferencePropertyName(p.getCurrentName(), p)) {
+/*   0*/          return deserializeFromObjectId(p, ctxt); 
 /*   0*/      } 
+/* 966*/      return typeDeserializer.deserializeTypedFromObject(p, ctxt);
 /*   0*/    } 
 /* 966*/    return typeDeserializer.deserializeTypedFromObject(p, ctxt);
 /*   0*/  }
