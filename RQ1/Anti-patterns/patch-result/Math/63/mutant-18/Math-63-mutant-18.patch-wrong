--- jd-result/Math/63/mutant-18/a-MathUtils.java	2021-07-14 09:14:41.781337881 -0700
+++ jd-result/Math/63/mutant-18/b-MathUtils.java	2021-07-14 09:14:43.189337921 -0700
@@ -158,7 +158,29 @@
 /*   0*/  }
 /*   0*/  
 /*   0*/  public static boolean equals(double x, double y) {
-/* 417*/    return ((Double.isNaN(x) && Double.isNaN(y)) || x == y);
+/*   0*/    // Byte code:
+/*   0*/    //   0: dload_0
+/*   0*/    //   1: invokestatic isNaN : (D)Z
+/*   0*/    //   4: pop
+/*   0*/    //   5: goto -> 15
+/*   0*/    //   8: dload_2
+/*   0*/    //   9: invokestatic isNaN : (D)Z
+/*   0*/    //   12: ifne -> 21
+/*   0*/    //   15: dload_0
+/*   0*/    //   16: dload_2
+/*   0*/    //   17: dcmpl
+/*   0*/    //   18: ifne -> 25
+/*   0*/    //   21: iconst_1
+/*   0*/    //   22: goto -> 26
+/*   0*/    //   25: iconst_0
+/*   0*/    //   26: ireturn
+/*   0*/    // Line number table:
+/*   0*/    //   Java source line number -> byte code offset
+/*   0*/    //   #417	-> 0
+/*   0*/    // Local variable table:
+/*   0*/    //   start	length	slot	name	descriptor
+/*   0*/    //   0	27	0	x	D
+/*   0*/    //   0	27	2	y	D
 /*   0*/  }
 /*   0*/  
 /*   0*/  public static boolean equalsIncludingNaN(double x, double y) {
