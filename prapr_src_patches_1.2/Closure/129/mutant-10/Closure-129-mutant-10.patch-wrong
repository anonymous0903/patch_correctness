--- jd-result/Closure/129/mutant-10/a-Node.java	2021-07-14 21:55:29.282625964 -0700
+++ jd-result/Closure/129/mutant-10/b-Node.java	2021-07-14 21:55:30.894626010 -0700
@@ -1138,39 +1138,190 @@
 /*   0*/  }
 /*   0*/  
 /*   0*/  boolean isEquivalentTo(Node node, boolean compareJsType, boolean recur, boolean shallow) {
-/*1514*/    if (this.type != node.getType() || getChildCount() != node.getChildCount() || getClass() != node.getClass())
-/*1517*/      return false; 
-/*1520*/    if (compareJsType && !JSType.isEquivalent(this.jsType, node.getJSType()))
-/*1521*/      return false; 
-/*1524*/    if (this.type == 102 || this.type == 103) {
-/*1525*/      int post1 = getIntProp(32);
-/*1526*/      int post2 = node.getIntProp(32);
-/*1527*/      if (post1 != post2)
-/*1528*/        return false; 
-/*1530*/    } else if (this.type == 40 || this.type == 154) {
-/*1531*/      if (this.type == 154) {
-/*1532*/        int quoted1 = getIntProp(36);
-/*1533*/        int quoted2 = node.getIntProp(36);
-/*1534*/        if (quoted1 != quoted2)
-/*1535*/          return false; 
-/*   0*/      } 
-/*1539*/      int slashV1 = getIntProp(54);
-/*1540*/      int slashV2 = node.getIntProp(54);
-/*1541*/      if (slashV1 != slashV2)
-/*1542*/        return false; 
-/*1544*/    } else if (this.type == 37 && 
-/*1545*/      getBooleanProp(50) != node.getBooleanProp(50)) {
-/*1546*/      return false;
-/*   0*/    } 
-/*1550*/    if (recur) {
-/*1552*/      Node n = this.first, n2 = node.first;
-/*1553*/      for (; n != null; 
-/*1554*/        n = n.next, n2 = n2.next) {
-/*1555*/        if (!n.isEquivalentTo(n2, compareJsType, (!shallow || !n.isFunction()), shallow))
-/*1557*/          return false; 
-/*   0*/      } 
-/*   0*/    } 
-/*1562*/    return true;
+/*   0*/    // Byte code:
+/*   0*/    //   0: aload_0
+/*   0*/    //   1: getfield type : I
+/*   0*/    //   4: aload_1
+/*   0*/    //   5: invokevirtual getType : ()I
+/*   0*/    //   8: if_icmpne -> 33
+/*   0*/    //   11: aload_0
+/*   0*/    //   12: invokevirtual getChildCount : ()I
+/*   0*/    //   15: aload_1
+/*   0*/    //   16: invokevirtual getChildCount : ()I
+/*   0*/    //   19: if_icmpne -> 33
+/*   0*/    //   22: aload_0
+/*   0*/    //   23: invokevirtual getClass : ()Ljava/lang/Class;
+/*   0*/    //   26: aload_1
+/*   0*/    //   27: invokevirtual getClass : ()Ljava/lang/Class;
+/*   0*/    //   30: if_acmpeq -> 35
+/*   0*/    //   33: iconst_0
+/*   0*/    //   34: ireturn
+/*   0*/    //   35: iload_2
+/*   0*/    //   36: ifeq -> 55
+/*   0*/    //   39: aload_0
+/*   0*/    //   40: getfield jsType : Lcom/google/javascript/rhino/jstype/JSType;
+/*   0*/    //   43: aload_1
+/*   0*/    //   44: invokevirtual getJSType : ()Lcom/google/javascript/rhino/jstype/JSType;
+/*   0*/    //   47: invokestatic isEquivalent : (Lcom/google/javascript/rhino/jstype/JSType;Lcom/google/javascript/rhino/jstype/JSType;)Z
+/*   0*/    //   50: ifne -> 55
+/*   0*/    //   53: iconst_0
+/*   0*/    //   54: ireturn
+/*   0*/    //   55: aload_0
+/*   0*/    //   56: getfield type : I
+/*   0*/    //   59: bipush #102
+/*   0*/    //   61: if_icmpeq -> 73
+/*   0*/    //   64: aload_0
+/*   0*/    //   65: getfield type : I
+/*   0*/    //   68: bipush #103
+/*   0*/    //   70: if_icmpne -> 101
+/*   0*/    //   73: aload_0
+/*   0*/    //   74: bipush #32
+/*   0*/    //   76: invokevirtual getIntProp : (I)I
+/*   0*/    //   79: istore #5
+/*   0*/    //   81: aload_1
+/*   0*/    //   82: bipush #32
+/*   0*/    //   84: invokevirtual getIntProp : (I)I
+/*   0*/    //   87: istore #6
+/*   0*/    //   89: iload #5
+/*   0*/    //   91: iload #6
+/*   0*/    //   93: if_icmpeq -> 98
+/*   0*/    //   96: iconst_0
+/*   0*/    //   97: ireturn
+/*   0*/    //   98: goto -> 210
+/*   0*/    //   101: aload_0
+/*   0*/    //   102: getfield type : I
+/*   0*/    //   105: bipush #40
+/*   0*/    //   107: pop2
+/*   0*/    //   108: goto -> 121
+/*   0*/    //   111: aload_0
+/*   0*/    //   112: getfield type : I
+/*   0*/    //   115: sipush #154
+/*   0*/    //   118: if_icmpne -> 184
+/*   0*/    //   121: aload_0
+/*   0*/    //   122: getfield type : I
+/*   0*/    //   125: sipush #154
+/*   0*/    //   128: if_icmpne -> 156
+/*   0*/    //   131: aload_0
+/*   0*/    //   132: bipush #36
+/*   0*/    //   134: invokevirtual getIntProp : (I)I
+/*   0*/    //   137: istore #5
+/*   0*/    //   139: aload_1
+/*   0*/    //   140: bipush #36
+/*   0*/    //   142: invokevirtual getIntProp : (I)I
+/*   0*/    //   145: istore #6
+/*   0*/    //   147: iload #5
+/*   0*/    //   149: iload #6
+/*   0*/    //   151: if_icmpeq -> 156
+/*   0*/    //   154: iconst_0
+/*   0*/    //   155: ireturn
+/*   0*/    //   156: aload_0
+/*   0*/    //   157: bipush #54
+/*   0*/    //   159: invokevirtual getIntProp : (I)I
+/*   0*/    //   162: istore #5
+/*   0*/    //   164: aload_1
+/*   0*/    //   165: bipush #54
+/*   0*/    //   167: invokevirtual getIntProp : (I)I
+/*   0*/    //   170: istore #6
+/*   0*/    //   172: iload #5
+/*   0*/    //   174: iload #6
+/*   0*/    //   176: if_icmpeq -> 181
+/*   0*/    //   179: iconst_0
+/*   0*/    //   180: ireturn
+/*   0*/    //   181: goto -> 210
+/*   0*/    //   184: aload_0
+/*   0*/    //   185: getfield type : I
+/*   0*/    //   188: bipush #37
+/*   0*/    //   190: if_icmpne -> 210
+/*   0*/    //   193: aload_0
+/*   0*/    //   194: bipush #50
+/*   0*/    //   196: invokevirtual getBooleanProp : (I)Z
+/*   0*/    //   199: aload_1
+/*   0*/    //   200: bipush #50
+/*   0*/    //   202: invokevirtual getBooleanProp : (I)Z
+/*   0*/    //   205: if_icmpeq -> 210
+/*   0*/    //   208: iconst_0
+/*   0*/    //   209: ireturn
+/*   0*/    //   210: iload_3
+/*   0*/    //   211: ifeq -> 281
+/*   0*/    //   214: aload_0
+/*   0*/    //   215: getfield first : Lcom/google/javascript/rhino/Node;
+/*   0*/    //   218: astore #5
+/*   0*/    //   220: aload_1
+/*   0*/    //   221: getfield first : Lcom/google/javascript/rhino/Node;
+/*   0*/    //   224: astore #6
+/*   0*/    //   226: aload #5
+/*   0*/    //   228: ifnull -> 281
+/*   0*/    //   231: aload #5
+/*   0*/    //   233: aload #6
+/*   0*/    //   235: iload_2
+/*   0*/    //   236: iload #4
+/*   0*/    //   238: ifeq -> 249
+/*   0*/    //   241: aload #5
+/*   0*/    //   243: invokevirtual isFunction : ()Z
+/*   0*/    //   246: ifne -> 253
+/*   0*/    //   249: iconst_1
+/*   0*/    //   250: goto -> 254
+/*   0*/    //   253: iconst_0
+/*   0*/    //   254: iload #4
+/*   0*/    //   256: invokevirtual isEquivalentTo : (Lcom/google/javascript/rhino/Node;ZZZ)Z
+/*   0*/    //   259: ifne -> 264
+/*   0*/    //   262: iconst_0
+/*   0*/    //   263: ireturn
+/*   0*/    //   264: aload #5
+/*   0*/    //   266: getfield next : Lcom/google/javascript/rhino/Node;
+/*   0*/    //   269: astore #5
+/*   0*/    //   271: aload #6
+/*   0*/    //   273: getfield next : Lcom/google/javascript/rhino/Node;
+/*   0*/    //   276: astore #6
+/*   0*/    //   278: goto -> 226
+/*   0*/    //   281: iconst_1
+/*   0*/    //   282: ireturn
+/*   0*/    // Line number table:
+/*   0*/    //   Java source line number -> byte code offset
+/*   0*/    //   #1514	-> 0
+/*   0*/    //   #1517	-> 33
+/*   0*/    //   #1520	-> 35
+/*   0*/    //   #1521	-> 53
+/*   0*/    //   #1524	-> 55
+/*   0*/    //   #1525	-> 73
+/*   0*/    //   #1526	-> 81
+/*   0*/    //   #1527	-> 89
+/*   0*/    //   #1528	-> 96
+/*   0*/    //   #1530	-> 98
+/*   0*/    //   #1531	-> 121
+/*   0*/    //   #1532	-> 131
+/*   0*/    //   #1533	-> 139
+/*   0*/    //   #1534	-> 147
+/*   0*/    //   #1535	-> 154
+/*   0*/    //   #1539	-> 156
+/*   0*/    //   #1540	-> 164
+/*   0*/    //   #1541	-> 172
+/*   0*/    //   #1542	-> 179
+/*   0*/    //   #1544	-> 181
+/*   0*/    //   #1545	-> 193
+/*   0*/    //   #1546	-> 208
+/*   0*/    //   #1550	-> 210
+/*   0*/    //   #1552	-> 214
+/*   0*/    //   #1553	-> 226
+/*   0*/    //   #1555	-> 231
+/*   0*/    //   #1557	-> 262
+/*   0*/    //   #1554	-> 264
+/*   0*/    //   #1562	-> 281
+/*   0*/    // Local variable table:
+/*   0*/    //   start	length	slot	name	descriptor
+/*   0*/    //   81	17	5	post1	I
+/*   0*/    //   89	9	6	post2	I
+/*   0*/    //   139	17	5	quoted1	I
+/*   0*/    //   147	9	6	quoted2	I
+/*   0*/    //   164	17	5	slashV1	I
+/*   0*/    //   172	9	6	slashV2	I
+/*   0*/    //   220	61	5	n	Lcom/google/javascript/rhino/Node;
+/*   0*/    //   226	55	6	n2	Lcom/google/javascript/rhino/Node;
+/*   0*/    //   0	283	0	this	Lcom/google/javascript/rhino/Node;
+/*   0*/    //   0	283	1	node	Lcom/google/javascript/rhino/Node;
+/*   0*/    //   0	283	2	compareJsType	Z
+/*   0*/    //   0	283	3	recur	Z
+/*   0*/    //   0	283	4	shallow	Z
 /*   0*/  }
 /*   0*/  
 /*   0*/  public String getQualifiedName() {
