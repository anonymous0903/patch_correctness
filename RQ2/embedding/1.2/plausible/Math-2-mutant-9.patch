--- jd-result/Math/2/mutant-9/ori-AbstractIntegerDistribution.java	2021-07-24 01:52:02.146297029 -0700
+++ jd-result/Math/2/mutant-9/patched-AbstractIntegerDistribution.java	2021-07-24 01:52:02.146297029 -0700
@@ -123,7 +123,8 @@
         // use the one-sided Chebyshev inequality to narrow the bracket
         // cf. AbstractRealDistribution.inverseCumulativeProbability(double)
         final double mu = getNumericalMean();
-        final double sigma = FastMath.sqrt(getNumericalVariance());
+    getNumericalVariance();
+    double sigma = 0.0D;
         final boolean chebyshevApplies = !(Double.isInfinite(mu) || Double.isNaN(mu) ||
                 Double.isInfinite(sigma) || Double.isNaN(sigma) || sigma == 0.0);
         if (chebyshevApplies) {
