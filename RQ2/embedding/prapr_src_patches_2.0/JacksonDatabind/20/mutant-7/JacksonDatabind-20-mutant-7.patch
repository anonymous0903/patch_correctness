--- jd-result-2.0/JacksonDatabind/20/mutant-7/a-POJOPropertyBuilder.java	2021-08-09 04:29:21.537571994 -0700
+++ jd-result-2.0/JacksonDatabind/20/mutant-7/b-POJOPropertyBuilder.java	2021-08-09 04:29:23.117572039 -0700
@@ -169,15 +169,9 @@
 /* 264*/    for (; next != null; next = next.next) {
 /* 268*/      Class<?> currClass = ((AnnotatedMethod)curr.value).getDeclaringClass();
 /* 269*/      Class<?> nextClass = ((AnnotatedMethod)next.value).getDeclaringClass();
-/* 270*/      if (currClass != nextClass) {
 /* 271*/        if (currClass.isAssignableFrom(nextClass)) {
 /* 272*/          curr = next;
-/*   0*/          continue;
-/*   0*/        } 
-/* 275*/        if (nextClass.isAssignableFrom(currClass)) {
-/*   0*/            continue; 
-/*   0*/           }
-/*   0*/      } 
+/* 275*/      } else if (!nextClass.isAssignableFrom(currClass)) {
 /* 284*/      int priNext = _setterPriority((AnnotatedMethod)next.value);
 /* 285*/      int priCurr = _setterPriority((AnnotatedMethod)curr.value);
 /* 287*/      if (priNext != priCurr) {
@@ -188,6 +182,7 @@
 /* 293*/        throw new IllegalArgumentException("Conflicting setter definitions for property \"" + getName() + "\": " + ((AnnotatedMethod)curr.value).getFullName() + " vs " + ((AnnotatedMethod)next.value).getFullName());
 /*   0*/      } 
 /*   0*/    } 
+/*   0*/    } 
 /* 297*/    this._setters = curr.withoutNext();
 /* 298*/    return (AnnotatedMethod)curr.value;
 /*   0*/  }
